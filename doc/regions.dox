namespace Litl {
/**

\addtogroup regions


\section regions-intro Regions Yield Pixel Positions, Subrasters Yield Pixel Values


Regions are objects which provide position iterators and can be translated.
There are many kinds of regions, from simple boxes to arbitrary shapes.
They are generally used to apply functions to a selected set of raster pixels,
which is accomplished thanks to the `Subraster` class template.
Rasters and extrapolators can be `subraster()`ed.
While regions allow to iterate on pixel positions,
subrasters allow to iterate on (possibly extrapolated) pixel values.

Functions which act on regions -- like convolution or morphologial operations -- are generally optimized
by selecting the most efficient method to iterate over the positions or pixels of the region or subraster.
This is done through a careful design of the position iterators, and of the associated pixel iterators in subrasters.


\section regions-box Box


Bounding boxes (`Box`es) are the most commonly used kinds of regions.
They are simply defined as a pair of front and back positions, both inclusive.


\section regions-sparse Sparse Regions


The following ad-hoc region classes are implemented with efficient iterators:

- `Grid`,
- `OrientedSlice`,
- `Mask`.

In addition to those specialized classes, additive position containers also meet `Region` requirements,
but no assumptions can be made on the regularity and therefore iterators cannot be optimized generically.
Yet, for very sparse and irregular regions, `Sequence<Position<N>>` migth be better suited than `Mask<N>`.


\section regions-performance Performance and Optimization


Regions can be more or less costly to iterate, depending on which regularity assumptions can be made.
For example, boxes contain many contiguous pixels, while sequences of positions can be completely random.
This generally makes iterating over boxes much faster than iterating over the sequence of positions inside the box.

\snippet LitlBenchmarkRegions.cpp Make box
\snippet LitlBenchmarkRegions.cpp Make sparse regions

\snippet LitlBenchmarkRegions.cpp Iterate over box

10ms

\snippet LitlBenchmarkRegions.cpp Iterate over grid

10ms

\snippet LitlBenchmarkRegions.cpp Iterate over mask

120ms

\snippet LitlBenchmarkRegions.cpp Iterate over sequence

200ms

*/
}
